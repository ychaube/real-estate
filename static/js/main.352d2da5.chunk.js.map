{"version":3,"sources":["containers/ui/Header/index.js","containers/ui/Body/index.js","containers/ui/Footer/index.js","containers/Property/Item/index.js","containers/Property/Grid/index.js","components/RangeSelector/styles.js","components/RangeSelector/index.js","utils/index.js","containers/Search/index.js","App.js","index.js"],"names":["Header","title","className","class","Body","props","children","Footer","href","PropertyItem","data","buildingName","floor","facing","amount","address","cabin","conference","workStation","isAC","isPantry","isWashroom","isFreeHold","renderDetail","value","name","renderAmenities","label","iconClass","iconName","labelClass","i","j","k","getFloorSuffix","PropertyGrid","type","map","item","key","container","padding","trackContainer","height","display","width","trackLine","alignSelf","trackLineColors","thumbContainer","fontFamily","borderRadius","backgroundColor","justifyContent","alignItems","boxShadow","thumbValueLabel","position","top","fontSize","fontWeight","thumbValueLabelColor","dragged","stationary","thumbLabel","bottom","color","RangeSelector","small","medium","valuePrefix","onChange","min","max","step","containerClass","containerStyle","style","styles","values","renderTrack","lineBackground","colors","middle","reduce","acc","point","index","length","getRangeTrackBackground","onMouseDown","onTouchStart","ref","background","renderThumb","isDragged","valueLabel","toFixed","Search","buildingSelectorRef","facingSelectorRef","useState","amountRange","setAmountRange","cabinRange","setCabinRange","conferenceRange","setConferenceRange","workstationRange","setWorkstationRange","useEffect","M","FormSelect","init","select","App","tabRef","Tabs","id","tab","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.352d2da5.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = ({ title }) => {\n\treturn (\n\t\t<header className=\"navbar-fixed\">\n\t\t\t<nav>\n\t\t\t\t<div className=\"nav-wrapper black\">\n\t\t\t\t\t<a class=\"center brand-logo\">{title}</a>\n\t\t\t\t\t{/* <form>\n\t\t\t\t\t\t<div class=\"input-field\">\n\t\t\t\t\t\t\t<input id=\"search\" type=\"search\" required />\n\t\t\t\t\t\t\t<label class=\"label-icon\" for=\"search\"><i class=\"material-icons\">search</i></label>\n\t\t\t\t\t\t\t<i class=\"material-icons\">close</i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form> */}\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</header>\n\t)\n}\n\nexport default Header\n","import React from 'react'\n\nconst Body = (props) => {\n  return (\n    <main className=\"grey lighten-2\">\n      <div className=\"container\">\n        {props.children}\n      </div>\n    </main>\n  )\n}\n\nexport default Body\n","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <footer class=\"page-footer black\">\n          {/* <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col l6 s12\">\n                <h5 class=\"white-text\">Footer Content</h5>\n                <p class=\"grey-text text-lighten-4\">You can use rows and columns here to organize your footer content.</p>\n              </div>\n              <div class=\"col l4 offset-l2 s12\">\n                <h5 class=\"white-text\">Links</h5>\n                <ul>\n                  <li><a class=\"grey-text text-lighten-3\" href=\"#!\">Link 1</a></li>\n                  <li><a class=\"grey-text text-lighten-3\" href=\"#!\">Link 2</a></li>\n                  <li><a class=\"grey-text text-lighten-3\" href=\"#!\">Link 3</a></li>\n                  <li><a class=\"grey-text text-lighten-3\" href=\"#!\">Link 4</a></li>\n                </ul>\n              </div>\n            </div>\n          </div> */}\n          <div class=\"footer-copyright\">\n            <div class=\"container\">\n            Â© 2020 Free to copy\n            <a class=\"grey-text text-lighten-4 right\" href=\"#!\">Made with â¥ï¸ in India</a>\n            </div>\n          </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst PropertyItem = ({ data }) => {\n  const { buildingName, floor, facing, address, amount, cabin, conference, workStation, isAC, isPantry, isWashroom, isFreeHold } = data;\n\n  const getFloorSuffix = (i) => {\n    let j = i % 10,\n      k = i % 100;\n    if (j === 1 && k !== 11) {\n      return i + \"st floor\";\n    }\n    if (j === 2 && k !== 12) {\n      return i + \"nd floor\";\n    }\n    if (j === 3 && k !== 13) {\n      return i + \"rd floor\";\n    }\n    return i + \"th floor\";\n  }\n\n  const renderDetail = (value, name) => {\n    return (\n      <div className=\"col s4 m2 center\">\n        <h6 className=\"black-text\">{value}</h6>\n        <div className=\"grey-text\">{name}</div>\n      </div>\n    );\n  };\n\n  const renderAmenities = (value, label) => {\n    let iconClass = \"red-text\";\n    let iconName = \"close\";\n    let labelClass = \"grey-text\";\n\n    if (value) {\n      iconClass = \"green-text\";\n      iconName = \"check\"\n      labelClass = \"grey-text\";\n    }\n\n    return (\n      <div className=\"col s3 center\">\n        <span className={iconClass}><i class=\"material-icons\">{iconName}</i></span>\n        <div className={labelClass}>{label}</div>\n      </div>\n    )\n  };\n\n  return (\n    <div class=\"card\">\n      <div class=\"card-content\">\n        <span class=\"card-title activator grey-text text-darken-4\">{buildingName}<i class=\"material-icons right\">more_vert</i></span>\n        <h6 class=\"grey-text\">{`${getFloorSuffix(floor)} / ${facing}`}<span className=\"right green-text\">{`â¹${amount}`}</span></h6>\n        <div className=\"row\">\n          {renderDetail(cabin, \"Cabin\")}\n          {renderDetail(conference, \"Conference\")}\n          {renderDetail(workStation, \"Work station\")}\n          {renderDetail(`â¹20/sq.ft.`, \"Maintenance\")}\n          {renderDetail(\"8,000 sq.ft.\", \"Super Area\")}\n          {renderDetail(\"70*30\", \"Covered\")}\n        </div>\n        <div className=\"row\">\n          {renderAmenities(isAC, \"A/C\")}\n          {renderAmenities(isPantry, \"Pantry\")}\n          {renderAmenities(isWashroom, \"Washroom\")}\n          {renderAmenities(isFreeHold, \"Freehold\")}\n        </div>\n      </div>\n      <div class=\"card-reveal\">\n        <span class=\"card-title grey-text text-darken-4\">TITLE<i class=\"material-icons right\">close</i></span>\n        <p>Test</p>\n      </div>\n    </div>\n  )\n}\n\nexport default PropertyItem;","import React from 'react'\nimport PropertyItem from '../Item';\nimport PropertyAddItem from '../AddItem';\n\nconst PropertyGrid = ({type}) => {\n    const property = [\n        {\n            buildingName: \"Aditya Heights\",\n            floor: \"2\",\n            facing: \"North-East\",\n            address: \"NSP\",\n            amount: \"1,23,233\",\n            cabin: 5,\n            conference: 7,\n            workStation: 3,\n            isAC: true,\n            isPantry: true,\n            isWashroom: false,\n            isFreeHold: true,\n        },\n        {\n            buildingName: \"Nariman Point Building\",\n            floor: \"1\",\n            facing: \"East\",\n            address: \"NSP\",\n            amount: \"5,20,113\",\n            cabin: 15,\n            conference: 0,\n            workStation: 12,\n            isAC: true,\n            isPantry: false,\n            isWashroom: false,\n            isFreeHold: false,\n        },\n        {\n            buildingName: \"Birla Towers\",\n            floor: \"5\",\n            facing: \"North-East\",\n            address: \"NSP\",\n            amount: \"2,11,136\",\n            cabin: 1,\n            conference: 1,\n            workStation: 4,\n            isAC: true,\n            isPantry: false,\n            isWashroom: true,\n            isFreeHold: true,\n        },\n        {\n            buildingName: \"Goel Plaza\",\n            floor: \"10\",\n            facing: \"North-East\",\n            address: \"NSP\",\n            amount: \"99,152\",\n            cabin: 7,\n            conference: 5,\n            workStation: 10,\n            isAC: false,\n            isPantry: true,\n            isWashroom: false,\n            isFreeHold: true,\n        },\n    ];\n\n    return (\n        <div class=\"row\">\n            {property.map((item, i) => <PropertyItem key={i} data={item} />)}\n        </div>\n    )\n}\n\nexport default PropertyGrid\n","export default {\n    container: {\n        padding: '10px',\n    },\n    trackContainer: {\n        height: '36px',\n        display: 'flex',\n        width: '100%'\n    },\n    trackLine: {\n        height: '5px',\n        width: '100%',\n        alignSelf: 'center'\n    },\n    trackLineColors: ['#ccc', '#000', '#ccc'],\n    thumbContainer: {\n        height: '45px',\n        fontFamily: 'Arial,Helvetica Neue,Helvetica,sans-serif',\n        borderRadius: '10px',\n        backgroundColor: '#fff',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        boxShadow: '0px 2px 6px #AAA'\n    },\n    thumbValueLabel: {\n        position: 'relative',\n        top: '-6px',\n        fontSize: '15px',\n        fontWeight: 'bold',\n    },\n    thumbValueLabelColor: {\n        dragged: '#548BF4',\n        stationary: '#000',\n    },\n    thumbLabel: {\n        position: 'absolute',\n        bottom: '4px',\n        color: '#737373',\n        fontSize: '11px',\n    },\n};","import React from 'react'\nimport { Range } from 'react-range';\n\nimport { getRangeTrackBackground } from '../../utils'\nimport styles from './styles'\n\nconst RangeSelector = ({ small, medium, label, valuePrefix, value, onChange, min, max, step, containerClass, containerStyle }) => {\n\n    const renderTrack = ({ props, children }) => {\n        const lineBackground = getRangeTrackBackground({ min, max, values: value, colors: styles.trackLineColors });\n        return (\n            <div\n                onMouseDown={props.onMouseDown}\n                onTouchStart={props.onTouchStart}\n                style={{ ...props.style, ...styles.trackContainer }}\n            >\n                <div ref={props.ref} style={{ ...styles.trackLine, background: lineBackground }}>\n                    {children}\n                </div>\n            </div>\n        )\n    };\n\n    const renderThumb = ({ index, props, isDragged }) => {\n        const valueLabel = `${valuePrefix || ''}${value[index].toFixed()}`;\n        const thumbValueLabelColor = isDragged ? styles.thumbValueLabelColor.dragged : styles.thumbValueLabelColor.stationary;\n        let width = small ? '42px' : (medium ? '68px' : '88px');\n\n        return (\n            <div {...props} style={{ ...props.style, ...styles.thumbContainer, width }}>\n                <span style={{ ...styles.thumbValueLabel, color: thumbValueLabelColor }}>{valueLabel}</span>\n                <span style={styles.thumbLabel}>{label}</span>\n            </div>\n        )\n    };\n\n    return (\n        <div className={containerClass} style={{ ...styles.container, ...containerStyle }}>\n            <Range\n                values={value}\n                step={step}\n                min={min}\n                max={max}\n                onChange={(values) => onChange(values)}\n                renderTrack={renderTrack}\n                renderThumb={renderThumb}\n            />\n        </div>\n    )\n}\n\nexport default RangeSelector\n\n{/* <Range\n    values={amountRange}\n    step={1}\n    min={0}\n    max={20}\n    onChange={(values) => setAmountRange(values)}\n    renderTrack={({ props, children }) => (\n        <div\n            onMouseDown={props.onMouseDown}\n            onTouchStart={props.onTouchStart}\n            style={{\n                ...props.style,\n                height: '36px',\n                display: 'flex',\n                width: '100%'\n            }}\n        >\n            <div\n                ref={props.ref}\n                style={{\n                    height: '5px',\n                    width: '100%',\n                    borderRadius: '4px',\n                    background: getRangeTrackBackground({\n                        values: amountRange,\n                        colors: ['#ccc', '#548BF4', '#ccc'],\n                        min: 0,\n                        max: 20\n                    }),\n                    alignSelf: 'center'\n                }}\n            >\n                {children}\n            </div>\n        </div>\n    )}\n    renderThumb={({ props, isDragged }) => (\n        <div\n            {...props}\n            style={{\n                ...props.style,\n                height: '42px',\n                width: '42px',\n                borderRadius: '4px',\n                backgroundColor: '#FFF',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                boxShadow: '0px 2px 6px #AAA'\n            }}\n        >\n            <div\n                style={{\n                    height: '16px',\n                    width: '5px',\n                    backgroundColor: isDragged ? '#548BF4' : '#CCC'\n                }}\n            />\n        </div>\n    )}\n/> */}","export const getRangeTrackBackground = ({ values, colors, min, max }) => {\n    const direction = {\n        Right: 'to right',\n        Left: 'to left',\n        Down: 'to bottom',\n        Up: 'to top'\n    };\n    const progress = values.map(value => ((value - min) / (max - min)) * 100);\n    const middle = progress.reduce(\n        (acc, point, index) =>\n            `${acc}, ${colors[index]} ${point}%, ${colors[index + 1]} ${point}%`,\n        ''\n    );\n    return `linear-gradient(${direction.Right}, ${colors[0]} 0%${middle}, ${\n        colors[colors.length - 1]\n        } 100%)`;\n};","import React, { useEffect, useState } from 'react';\nimport M from 'materialize-css';\n\nimport RangeSelector from '../../components/RangeSelector'\n\nconst Search = () => {\n    let buildingSelectorRef;\n    let facingSelectorRef;\n\n    const [amountRange, setAmountRange] = useState([3000000, 7000000]);\n    const [cabinRange, setCabinRange] = useState([2, 14]);\n    const [conferenceRange, setConferenceRange] = useState([5, 10]);\n    const [workstationRange, setWorkstationRange] = useState([3, 8]);\n\n    useEffect(() => {\n        M.FormSelect.init(buildingSelectorRef);\n        M.FormSelect.init(facingSelectorRef);\n    }, [buildingSelectorRef, facingSelectorRef]);\n\n    const renderBuildingSelector = () => (\n        <div class=\"col s12 m6\">\n            <select ref={select => { buildingSelectorRef = select; }}>\n                <option value=\"0\">Select building name</option>\n                <option value=\"1\">Aditya Heights</option>\n            </select>\n        </div>\n    );\n\n    const renderFacingSelector = () => (\n        <div class=\"col s12 m6\">\n            <select ref={select => { facingSelectorRef = select; }} >\n                <option value=\"0\">Select facing</option>\n                <option value=\"1\">North-East</option>\n            </select>\n        </div>\n\n    );\n\n    const renderFloorRangeSelector = () => {\n        return (\n            <div className=\"col s12 m6\">\n                renderFloorRangeSelector\n            </div>\n        )\n    }\n\n    const renderAmountRangeSelector = () => {\n        return (\n            <RangeSelector\n                label=\"Amount\"\n                valuePrefix=\"â¹\"\n                value={amountRange}\n                onChange={setAmountRange}\n                min={0}\n                max={9999999}\n                step={100000}\n                containerClass={\"col s12 m6\"}\n            />\n        )\n    }\n\n    const renderCabinRangeSelector = () => {\n        return (\n            <RangeSelector\n                small\n                label=\"Cabin\"\n                value={cabinRange}\n                onChange={setCabinRange}\n                min={0}\n                max={15}\n                step={1}\n                containerClass={\"col s12 m6\"}\n            />\n        )\n    }\n\n    const renderConferenceRangeSelector = () => {\n        return (\n            <RangeSelector\n                medium\n                label=\"Conference\"\n                value={conferenceRange}\n                onChange={setConferenceRange}\n                min={0}\n                max={15}\n                step={1}\n                containerClass={\"col s12 m6\"}\n            />\n        )\n    }\n\n    const renderWorkstationRangeSelector = () => {\n        return (\n            <RangeSelector\n                medium\n                label=\"Work Station\"\n                value={workstationRange}\n                onChange={setWorkstationRange}\n                min={0}\n                max={15}\n                step={1}\n                containerClass={\"col s12 m6\"}\n            />\n        )\n    }\n\n    const renderSuperAreaRangeSelector = () => {\n        return (\n            <div className=\"col s12 m6\">\n                renderSuperAreaRangeSelector\n            </div>\n        )\n    }\n\n    const renderBuiltUpAreaRangeSelector = () => {\n        return (\n            <div className=\"col s12 m6\">\n                renderBuiltUpAreaRangeSelector\n            </div>\n        )\n    }\n\n    const renderAmenities = () => (\n        <div className=\"row\">\n            <div className=\"col s6 m3\">\n                <label>\n                    <input type=\"checkbox\" />\n                    <span>A/C</span>\n                </label>\n            </div>\n            <div className=\"col s6 m3\">\n                <label>\n                    <input type=\"checkbox\" />\n                    <span>Pantry</span>\n                </label>\n            </div>\n            <div className=\"col s6 m3\">\n                <label>\n                    <input type=\"checkbox\" />\n                    <span>Washroom</span>\n                </label>\n            </div>\n            <div className=\"col s6 m3\">\n                <label>\n                    <input type=\"checkbox\" />\n                    <span>Freehold</span>\n                </label>\n            </div>\n        </div>\n    );\n    return (\n        <div class=\"col s12\">\n            <div class=\"card\">\n                <div class=\"card-content\">\n                    <div className=\"row\">\n                        {renderBuildingSelector()}\n                        {renderFacingSelector()}\n                        {/* Dropdown Floor */}\n                        {/* {renderFloorRangeSelector()} */}\n\n                        {renderCabinRangeSelector()}\n                        {renderConferenceRangeSelector()}\n\n                        {/* Range Workstation */}\n                        {renderWorkstationRangeSelector()}\n\n                        {/* Range Super area */}\n                        {/* {renderSuperAreaRangeSelector()} */}\n\n                        {/* Range Cover area */}\n                        {/* {renderBuiltUpAreaRangeSelector()} */}\n\n                        {/* Range Amount */}\n                        {renderAmountRangeSelector()}\n\n                    </div>\n                    {renderAmenities()}\n                </div>\n                <div class=\"card-action\">\n                    {/* <button className=\"btn waves-effect black\">Clear Filter</button>\n                    <button className=\"btn waves-effect black\">Apply Filter</button>\n                     */}\n                    <a className=\"waves-effect btn white black-text\">Clear</a>\n                    <a className=\"waves-effect btn black right\">Apply</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Search;","import React, {useEffect} from 'react';\nimport M from \"materialize-css\";\n\nimport Header from \"./containers/ui/Header\";\nimport Body from \"./containers/ui/Body\";\nimport Footer from \"./containers/ui/Footer\";\nimport PropertyGrid from './containers/Property/Grid';\nimport Search from './containers/Search';\n\nimport './App.css';\n\nconst App = () => {\n\n  let tabRef;\n  useEffect(()=> {\n    M.Tabs.init(tabRef);\n  }, [tabRef])\n\n  const renderTabs = () => {\n    return (\n      <>\n        <ul id=\"tabs\" class=\"tabs grey lighten-2\" ref={tab => {tabRef = tab;}}>\n          <li class=\"tab col s4 white\">\n            <a className=\"active\" href=\"#tab_available\">Available</a>\n          </li>\n          <li class=\"tab col s4 white\">\n            <a class=\"\" href=\"#tab_upcoming\">Upcoming</a>\n          </li>\n          <li class=\"tab col s4 white\">\n            <a className=\"\" href=\"#tab_rented\">Rented</a>\n          </li>\n        </ul>\n\n        <div id=\"tab_available\" class=\"col s12\">\n          <PropertyGrid type=\"available\" />\n        </div>\n        <div id=\"tab_upcoming\" class=\"col s12\">\n          <PropertyGrid type=\"upcoming\" />\n        </div>\n        <div id=\"tab_rented\" class=\"col s12\">\n          <PropertyGrid type=\"rented\" />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Header title=\"Real Estate\" />\n      <Body>\n        <Search />\n        {renderTabs()}\n      </Body>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}